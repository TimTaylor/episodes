% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge_episodes.R
\name{merge_episodes}
\alias{merge_episodes}
\alias{merge_episodes.default}
\alias{merge_episodes.data.table}
\alias{merge_episodes.tbl_df}
\alias{merge_episodes.data.frame}
\title{Merge overlapping episodes}
\usage{
merge_episodes(x, ...)

\method{merge_episodes}{default}(x, ...)

\method{merge_episodes}{data.table}(x, id = "id", start = "start", end = "end", ...)

\method{merge_episodes}{tbl_df}(x, id = "id", start = "start", end = "end", ...)

\method{merge_episodes}{data.frame}(x, id = "id", start = "start", end = "end", ...)
}
\arguments{
\item{x}{\R object.}

\item{...}{Not currently used.}

\item{id}{\verb{[character]}

Variable in \code{x} representing the id associated with the episode.}

\item{start}{\verb{[character]}

Variable in \code{x} representing the start of the episode.

Must refer to a variable that is either class \verb{<Date>} or \verb{<POSIXct>}.}

\item{end}{\verb{[character]}

Variable in \code{x} representing the start of the episode.

Must refer to a variable that is the same class as \code{start}.}
}
\value{
The resulting combined episode intervals split by id and ordered by interval
number.

The returned object will be of the same class as the input \code{x} (i.e. a
data.frame, data.table or tibble).
}
\description{
\code{merge_episodes()} combines overlapping episodes in to a minimal spanning
interval split by in individual identifier. Methods are provided for
data.frame like objects.
}
\examples{
dat <- data.frame(
    id = c(1, 1, 2, 2, 2, 1),
    start = as.Date(c(
        "2020-01-01", "2020-01-03", "2020-04-01",
        "2020-04-15", "2020-04-17", "2020-05-01"
    )),
    end = as.Date(c(
        "2020-01-10", "2020-01-10", "2020-04-30",
        "2020-04-16", "2020-04-19", "2020-10-01"
    ))
)

merge_episodes(dat)

}
